{"name": "Проверка появления ошибки при создании двух одинаковых курьеров", "status": "failed", "statusDetails": {"message": "AssertionError: assert (409 == 409 and 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\n +  where 409 = <Response [409]>.status_code\n  \n  - Этот логин уже используется\n  + Этот логин уже используется. Попробуйте другой.)", "trace": "self = <test_create_courier.TestCreateCourier object at 0x000002C087E278F0>\n\n    @allure.title(\"Проверка появления ошибки при создании двух одинаковых курьеров\")\n    @allure.description(\"Создание двух одинаковых курьеров, проверка статуса ответа и тела ответа\")\n    def test_create_duplicate_courier(self):\n        body = helper.new_courier_login_password()\n        requests.post(urls.BASE_URL + urls.CREATE_COURIER_ENDPOINT, body)               # создали первого курьера с body\n        duplicate_courier_request = scooter_api.create_courier(body)                    # создали второго курьера с body\n        login_body = body.copy()\n        login_body.pop(\"firstName\", None)\n        id_courier = requests.post(urls.BASE_URL + urls.LOGIN_COURIER_ENDPOINT, json=login_body).json().get(\"id\")\n        requests.delete(urls.BASE_URL + urls.DELETE_COURIER_ENDPOINT + str(id_courier))\n>       assert duplicate_courier_request.status_code == 409 and duplicate_courier_request.json()[\"message\"] == data.ErrorMessages.ERROR_MESSAGE_FAIL_NAME\nE       AssertionError: assert (409 == 409 and 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\nE        +  where 409 = <Response [409]>.status_code\nE         \nE         - Этот логин уже используется\nE         + Этот логин уже используется. Попробуйте другой.)\n\ntests\\test_create_courier.py:27: AssertionError"}, "description": "Создание двух одинаковых курьеров, проверка статуса ответа и тела ответа", "steps": [{"name": "Создание курьера в сервисе 'Самокат'", "status": "passed", "parameters": [{"name": "body", "value": "{'login': 'ygwhnbcufh', 'password': 'fvyuazmqdq', 'firstName': 'wxddrfhjtm'}"}], "start": 1715362792854, "stop": 1715362792993}], "start": 1715362792729, "stop": 1715362793254, "uuid": "20cecc5a-c059-4993-a24e-29060ed23d7d", "historyId": "b0188f64bd1dcf0f2ef38757ee9d9fab", "testCaseId": "b0188f64bd1dcf0f2ef38757ee9d9fab", "fullName": "tests.test_create_courier.TestCreateCourier#test_create_duplicate_courier", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_courier"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "LAPTOP-DIB55KQC"}, {"name": "thread", "value": "10444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_courier"}]}